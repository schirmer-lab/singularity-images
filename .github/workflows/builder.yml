name: singularity-deploy

on:
  push:
    branches:
      - "main"

jobs:

  lock:
    name: Lock actions
    runs-on: self-hosted
    if: always()
    steps:
      - name: Lock actions
        run: |
            touch /nfs/data/release.job.lock


  release:
    name: Create Release
    runs-on: self-hosted
    needs: [lock]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Latest Tag
        run: |
            # Get the latest tag, we won't build if it's the current
            git fetch --tags
            latest_tag=$(git tag | tail -1)
            echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Define Repository Name and Release Version
        run: |
            repo=$(echo "${GITHUB_REPOSITORY/\//-}")
            release=$(cat VERSION)
            echo "reponame=$repo" >> $GITHUB_ENV
            echo "release_tag=$release" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: ${{ env.release_tag != env.latest_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_tag }}
          release_name: Release ${{ env.release_tag }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        if: ${{ env.release_tag != env.latest_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          tag_name: ${{ env.release_tag }}
        run: |
          gh release upload "$tag_name" $(find /nfs/data/release/ -type f -name "*.sif" -printf "%p ")


  push:
    name: Push to LFS
    runs-on: self-hosted
    needs: [release]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: schirmer-lab/large-data
          ref: 'main'
          token: ${{ secrets.ACTIONS_ACCESS_TOKEN }}
      - name: Git push
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git config --global http.postBuffer 524288000
          git config --global pack.window 1
          git config --global core.compression 0
          git config --global http.version HTTP/1.1

          export GIT_TRACE_PACKET=1
          export GIT_TRACE=1
          export GIT_CURL_VERBOSE=1

          dir=/nfs/data/medium_images
          if [ -d "$dir" ]; then
            if [ -z "$(ls -A $dir)" ]; then
                echo "Nothing to release..."
            else
              cp /nfs/data/medium_images/*.sif ./singularity/
              git add --all
              git commit -m "Update large data"
              git push
            fi
          else
            echo "Directory does not exist..."
          fi
          
  unlock:
    name: Unlock actions
    runs-on: self-hosted
    needs: [push]
    if: always()
    steps:
      - name: Unlock actions
        run: |
            rm /nfs/data/release.job.lock
